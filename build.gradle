buildscript {
    ext {
        spockBomVersion = '2.1-groovy-3.0'
        jacksonBomVersion= '2.13.2'

        dependencyManagementPluginVersion = '1.0.11.RELEASE'
        modulePluginVersion = '1.8.10'
        gradleNodePluginVerion = '3.0.1'
    }
}

plugins {
    id 'io.spring.dependency-management' version "${dependencyManagementPluginVersion}" apply false
    id 'org.javamodularity.moduleplugin' version "${modulePluginVersion}" apply false
    id "com.github.node-gradle.node" version "${gradleNodePluginVerion}" apply false
}

allprojects {
    apply plugin: 'groovy'
}

help {
    dependsOn ':registration-user-interface:npmHelp'
}

afterEvaluate {
    subprojects { subproject ->
        if (subproject.name != 'registration-user-interface') {
            apply plugin: 'org.javamodularity.moduleplugin'
        }

        apply plugin: 'io.spring.dependency-management'

        repositories {
            mavenCentral()
        }

        dependencyManagement {
            imports {
                // This has managed dependencies of spock modules including spock-core module
                mavenBom "org.spockframework:spock-bom:${spockBomVersion}"
                // Junit5 bom is managed dependencies of spock-core module bom
                mavenBom "org.spockframework:spock-core:${spockBomVersion}"
                // This has managed dependencies of fasterxml jackson modules including dataformat-csv
                mavenBom "com.fasterxml.jackson:jackson-bom:${jacksonBomVersion}"
            }
        }

        dependencies {
            testImplementation 'org.spockframework:spock-core'
            testImplementation 'org.junit.jupiter:junit-jupiter'
        }

        test {
            if (subproject.name != 'registration-user-interface') {
                moduleOptions {
                    runOnClasspath = true
                }
            }
            useJUnitPlatform()
            testLogging {
                events 'passed', 'skipped', 'failed'
                showStandardStreams true
            }
        }
    }
}