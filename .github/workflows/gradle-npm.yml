name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Set up checkout'
        uses: actions/checkout@v3

      - name: Set up JDK 11 for project
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Node
        id: setUpNode
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'
          cache: 'npm'
          cache-dependency-path: ./registration-user-interface/package-lock.json
          
      - name: Set up npm
        run: (cd ./registration-user-interface && npm install -g npm)

      - name: 'Install npm dependencies'
        if: steps.setUpNode.outputs.cache-hit != 'true'
        run:  ./gradlew npmInstall

      - name: Run Gradle and npm tests
        run: ./gradlew test

      - name: Generate JaCoCo coverage report for project `lisp-parenthesis-validator`
        id: jacocoCoverageLispParenthesisValidator
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: .github/jacoco-badges
          generate-branches-badge: true
          jacoco-csv-file: lisp-parenthesis-validator/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: lisp-parenthesis-validator-coverage.svg
          branches-badge-filename: lisp-parenthesis-validator-branches.svg
          coverage-label: coverage (lisp-parenthesis-validator)
          branches-label: branches (lisp-parenthesis-validator)

      - name: Log test coverage details for project `lisp-parenthesis-validator`
        run: |
          echo "coverage = ${{ steps.jacocoCoverageLispParenthesisValidator.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacocoCoverageLispParenthesisValidator.outputs.branches }}"

      - name: Generate JaCoCo coverage report for project `csv-enrollment-processor`
        id: jacocoCsvEnrollmentProcessor
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: .github/jacoco-badges
          generate-branches-badge: true
          jacoco-csv-file: csv-enrollment-processor/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: csv-enrollment-processor-coverage.svg
          branches-badge-filename: csv-enrollment-processor-branches.svg
          coverage-label: coverage (csv-enrollment-processor)
          branches-label: branches (csv-enrollment-processor)

      - name: Log test coverage details for project `csv-enrollment-processor`
        run: |
          echo "coverage = ${{ steps.jacocoCsvEnrollmentProcessor.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacocoCsvEnrollmentProcessor.outputs.branches }}"

      - name: Commit jacoco coverage badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name ${{ secrets.GIT_USER_NAME }}
            git config --global user.email ${{ secrets.GIT_USER_NAME }}
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push
          else
            echo "Test coverage hasn't changed"
          fi

      - name: Run React production build
        run: ./gradlew bundle
        env:
          REACT_APP_AWS_API_GATEWAY_ENDPOINT: ${{ secrets.AWS_API_GATEWAY_ENDPOINT }}

      - name: Upload React build to s3
        run: aws s3 sync ./registration-user-interface/build s3://${{ secrets.REACT_BUILD_BUCKET_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}